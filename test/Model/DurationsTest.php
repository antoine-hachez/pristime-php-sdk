<?php
/**
 * DurationsTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  PristimePhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Pristime Workforce Scheduling API
 *
 * ## Pristime Workforce Scheduling API          The Pristime Scheduling API lets clients provide workers, shifts,         and constraints, and returns optimized schedules.          ## Authentication          All endpoints require an API key in the `Pristime-API-Key` header.          ## Support          For technical support, contact us at antoine.hachez@pristime.com
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: antoine.hachez@pristime.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.16.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace PristimePhpSdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * DurationsTest Class Doc Comment
 *
 * @category    Class
 * @description Complete duration summary of all scheduling changes and new shift creation.  Provides a comprehensive view of how many minutes of work were affected by the optimization, split between modifications to your existing shifts and automatic creation of new shifts to meet demands.  **Total Impact Calculation:** - Changed work &#x3D; provided.changed_assignment + provided.gained_assignment + provided.lost_assignment - New work &#x3D; created - Total optimization impact &#x3D; changed work + new work  **Usage:** - Track optimization effectiveness and coverage improvements - Calculate billing for usage-based pricing models - Estimate communication needs for schedule change notifications
 * @package     PristimePhpSdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class DurationsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Durations"
     */
    public function testDurations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "provided"
     */
    public function testPropertyProvided()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created"
     */
    public function testPropertyCreated()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
